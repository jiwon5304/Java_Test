openapi: 3.0.1
info:
  title: User Crud API Test
  description: Hexagonal
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
tags:
  - name: user
    description: "Operations about user"
#    externalDocs:
#      description: "Find out more about our store"
#      url: "http://swagger.io"
paths:
  /users:
    get:
      tags:
        - user
      summary: Get User list
      operationId: getUsers
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
    post:
      tags:
        - user
      summary: Create a user
      operationId: createUser
      requestBody:
        description: create user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        200:
          description: Created User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        400:
          description: failed User
  /users/{id}:
    get:
      tags:
        - user
      summary: Get user by Id
      description: ""
      operationId: getUserById
      parameters:
        - name: id
          description: user id
          schema:
            type: integer
            format: int64
          in: path
          required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        400:
          description: Invalid user supplied
        404:
          description: User not found
    put:
      tags:
        - user
      summary: Updated user
      description: ""
      operationId: updateUser
      parameters:
        - name: id
          description: user id
          schema:
            type: integer
            format: int64
          in: path
          required: true
      requestBody:
        description: user request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        400:
          description: Invalid user supplied
        404:
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user by ID
      description: For valid response try integer IDs with positive integer value.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            minimum: 1.0
            format: int64
          description: ID of the user that needs to be deleted
          required: true
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
        404:
          description: user not found
components:
  schemas:
    UserRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: user name
        password:
          type: string
          example: password
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: user name
        password:
          type: string
          example: password